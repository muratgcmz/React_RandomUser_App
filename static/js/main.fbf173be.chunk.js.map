{"version":3,"sources":["assets/email.svg","assets/phone.svg","assets/location.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","user","setUser","useEffect","fetchUser","fetch","then","response","json","data","results","console","log","className","map","item","index","src","picture","large","alt","name","title","first","last","emailSvg","email","phoneSvg","cell","locationSvg","location","city","country","dob","age","registered","date","substr","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAe,G,MAAA,IAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,qC,OCwD1BA,MAlDf,WAAgB,IAAD,EACWC,qBADX,mBACNC,EADM,KACAC,EADA,KAGbC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAY,WAChBC,MAAM,8BACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLP,EAAQO,EAAKC,SACbC,QAAQC,IAAIH,EAAKC,aAIvB,OACE,sBAAKG,UAAU,MAAf,iBACGZ,QADH,IACGA,OADH,EACGA,EAAMa,KAAI,SAACC,EAAMC,GAAP,OACT,sBAAiBH,UAAU,eAA3B,UACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKI,IAAKF,EAAKG,QAAQC,MAAOC,IAAI,SAClC,oBAAGP,UAAU,SAAb,UACGE,EAAKM,KAAKC,MADb,IACqBP,EAAKM,KAAKE,MAD/B,IACuCR,EAAKM,KAAKG,WAGnD,sBAAKX,UAAU,gBAAf,UACE,qBAAKI,IAAKQ,EAAUL,IAAI,GAAGP,UAAU,SACrC,mBAAGA,UAAU,MAAb,SAAoBE,EAAKW,WAG3B,sBAAKb,UAAU,gBAAf,UACE,qBAAKI,IAAKU,EAAUP,IAAI,GAAGP,UAAU,SACrC,mBAAGA,UAAU,MAAb,SAAoBE,EAAKa,UAE3B,sBAAKf,UAAU,gBAAf,UACE,qBAAKI,IAAKY,EAAaT,IAAI,GAAGP,UAAU,SACxC,oBAAGA,UAAU,MAAb,UACGE,EAAKe,SAASC,KADjB,MAC0BhB,EAAKe,SAASE,cAG1C,uCAAUjB,EAAKkB,IAAIC,OACnB,gDAAmBnB,EAAKoB,WAAWC,KAAKC,OAAO,EAAG,SAvB1CrB,MA0BZ,wBAAQsB,QAASlC,EAAjB,6BCvCSmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.fbf173be.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/email.e1f03bb9.svg\";","export default __webpack_public_path__ + \"static/media/phone.d017e1ae.svg\";","export default __webpack_public_path__ + \"static/media/location.0b7d98ab.svg\";","import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport emailSvg from \"./assets/email.svg\";\r\nimport phoneSvg from \"./assets/phone.svg\";\r\nimport locationSvg from \"./assets/location.svg\";\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, []);\r\n\r\n  const fetchUser = () => {\r\n    fetch(\"https://randomuser.me/api/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setUser(data.results);\r\n        console.log(data.results);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {user?.map((item, index) => (\r\n        <div key={index} className=\"card-wrapper\">\r\n          <div className=\"header-container\">\r\n            <img src={item.picture.large} alt=\"user\" />\r\n            <p className=\"header\">\r\n              {item.name.title} {item.name.first} {item.name.last}\r\n            </p>\r\n          </div>\r\n          <div className=\"par-container\">\r\n            <img src={emailSvg} alt=\"\" className=\"icon\" />\r\n            <p className=\"par\">{item.email}</p>\r\n          </div>\r\n\r\n          <div className=\"par-container\">\r\n            <img src={phoneSvg} alt=\"\" className=\"icon\" />\r\n            <p className=\"par\">{item.cell}</p>\r\n          </div>\r\n          <div className=\"par-container\">\r\n            <img src={locationSvg} alt=\"\" className=\"icon\" />\r\n            <p className=\"par\">\r\n              {item.location.city} - {item.location.country}\r\n            </p>\r\n          </div>\r\n          <p> Age: {item.dob.age}</p>\r\n          <p>Register Date: {item.registered.date.substr(0, 10)}</p>\r\n        </div>\r\n      ))}\r\n      <button onClick={fetchUser}>Random User</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}